cc_library(
    name = "s2",
    srcs =  glob(["*.h", "base/*.h", "strings/*.h", "util/math/*.h"]) + [
        "base/logging.cc",
        "strings/split.cc",
        "strings/stringprintf.cc",
        "strings/strtoint.cc",
        "strings/strutil.cc",
        # "util/math/exactfloat/exactfloat.cc",
        "util/math/mathlimits.cc",
        "util/math/mathutil.cc",
        "s1angle.cc",
        "s1interval.cc",
        "s2.cc",
        "s2cap.cc",
        "s2cell.cc",
        "s2cellid.cc",
        "s2cellunion.cc",
        "s2edgeindex.cc",
        "s2edgeutil.cc",
        "s2latlng.cc",
        "s2latlngrect.cc",
        "s2loop.cc",
        "s2pointregion.cc",
        "s2polygon.cc",
        "s2polygonbuilder.cc",
        "s2polyline.cc",
        "s2r2rect.cc",
        "s2region.cc",
        "s2regioncoverer.cc",
        "s2regionintersection.cc",
        "s2regionunion.cc",
    ],
    hdrs = glob(["*.h", "base/*.h", "strings/*.h", "util/math/*.h"]) + ["util/hash/hash_jenkins_lookup2.h"],
    copts = [
        "-Wall",
        "-Wwrite-strings",
        "-Woverloaded-virtual",
        "-Wno-sign-compare",
        "-DS2_USE_EXACTFLOAT",
        "-DHASH_NAMESPACE=std",
        "-Wno-absolute-value",
        "-Wno-dynamic-class-memaccess",
        "-stdlib=libc++",
        "-std=c++11",
    ],
    # deps = ["//openssl"],
    visibility = ["//visibility:public"],
)
